pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            defaultContainer 'jnlp'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    # Jenkins will handle the arguments automatically
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: maven
    image: maven:3.8.5-openjdk-11  # Use a Maven Docker image
    command:
    - cat
    tty: true
# Install jmeter
- name: jmeter
    image: justb4/jmeter:5.4.1
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }

    stages {
        stage('Clone Source Code') {
            steps {
                script {
                    git url: 'https://github.com/prabhatu012345/jenkins-maven-pipeline.git', branch: 'main'
                }
            }
        }

        stage('JUnit Test') {
            steps {
                container('maven') {
                    script {
                        echo 'Running JUnit tests...'
                        sh 'mvn test'
                    }
                }
            }
        }

        stage('Build with Maven') {
            steps {
                container('maven') {
                    script {
                        echo 'Building project with Maven...'
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }
          stage('Load Performance Test with JMeter') {
            steps {
                container('jmeter') {
                    script {
                        // Run JMeter performance tests
                        echo 'Running JMeter load test...'
                        sh 'jmeter -n -t load_test_plan.jmx -l results.jtl -e -o /results'
                    }
                }
            }
        }
    }
}
