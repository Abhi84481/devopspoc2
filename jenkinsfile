pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            defaultContainer 'jnlp'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  serviceAccountName: jenkins-ksa
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    # Jenkins will handle the arguments automatically
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: maven
    image: maven:3.8.5-openjdk-11  # Use a Maven Docker image
    command:
    - cat
    tty: true
  - name: jmeter
    image: justb4/jmeter:5.5  # this is official apache jmeter image
    command:
    - cat
    tty: true
  - name: selenium
    image: selenium/standalone-chrome:latest  # this is official selenium image
    command:
    - cat
    tty: true
  - name: gcloud
    image: google/cloud-sdk:slim   # this is official gcloud image
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }


    stages {
        stage('Clone Source Code') {
            steps {
                script {
                    git url: 'https://github.com/prabhatu012345/jenkins-maven-pipeline.git', branch: 'main'
                }
            }
        }

        stage('Build with Maven') {
            steps {
                container('maven') {
                    script {
                        echo 'Building project with Maven...'
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

       stage('Deploy created artifact to artifact repository') {
            steps {
                container('maven') {
                    script {
                        echo 'Deploying jar file...'
                        sh 'mvn deploy -DskipTests'
                    }
                }
            }
        }

        stage('JUnit Test') {
            steps {
                container('maven') {
                    script {
                        echo 'Running JUnit tests...'
                        sh 'mvn test -Dtest=com.example.HelloWorldTest'
                    }
                }
            }
        }
        stage('Load Performance Test with JMeter') {
            steps {
                container('jmeter') {
                    script {
                        // Verify that the JMeter test plan file exists
                        echo 'Checking if JMeter test plan file exists...'
                        sh 'ls -l load_test_plan.jmx'
                        // Run JMeter performance tests
                        echo 'Running JMeter load test...'
                        sh 'jmeter -n -t load_test_plan.jmx -l results.jtl -e -o /results'
                    }
                }
            }
        }
        stage('Selenium Test') {
            steps {
                 container('maven') {
                    script {
                            echo 'Running Selenium tests...'
                            sh '''
                    wget -q https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip -O /home/jenkins/agent/workspace/chromedriver_linux64.zip
                    unzip -o /home/jenkins/agent/workspace/chromedriver_linux64.zip -d /home/jenkins/agent/workspace
                    chmod +x /home/jenkins/agent/workspace/chromedriver
                    '''
                            sh 'mvn test -Dtest=com/example/SeleniumTest'
                    }
                }
             }
          }
      }
}
