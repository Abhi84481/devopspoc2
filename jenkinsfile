pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            defaultContainer 'jnlp'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    # Jenkins will handle the arguments automatically
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: maven
    image: maven:3.8.5-openjdk-11  # Use a Maven Docker image
    command:
    - cat
    tty: true
  - name: jmeter
    image: justb4/jmeter:5.5  # this is official apache jmeter image
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }

    stages {
        stage('Clone Source Code') {
            steps {
                script {
                    git url: 'https://github.com/prabhatu012345/jenkins-maven-pipeline.git', branch: 'main'
                }
            }
        }

        stage('Build with Maven') {
            steps {
                container('maven') {
                    script {
                        echo 'Building project with Maven...'
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

        stage('JUnit Test') {
            steps {
                container('maven') {
                    script {
                        echo 'Running JUnit tests...'
                        sh 'mvn test'
                    }
                }
            }
        }
        stage('Load Performance Test with JMeter') {
            steps {
                container('jmeter') {
                    script {
                        // Verify that the JMeter test plan file exists
                        echo 'Checking if JMeter test plan file exists...'
                        sh 'ls -l load_test_plan.jmx'
                        // Run JMeter performance tests
                        echo 'Running JMeter load test...'
                        sh 'jmeter -n -t load_test_plan.jmx -l results.jtl -e -o /results'
                    }
                }
            }
        }
        stage('Selenium Test') {
            steps {
                container('maven-86dcbf98d6-hzwfk') { // Use the appropriate container name
                    script {
                        // Install necessary tools and dependencies
                        sh '''
                            echo "Installing dependencies for Selenium..."
                            apt-get update
                            apt-get install -y wget unzip openjdk-11-jdk

                            # Install ChromeDriver
                            wget https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
                            unzip chromedriver_linux64.zip
                            mv chromedriver /usr/local/bin/chromedriver

                            # Install Maven if not present
                            if ! command -v mvn &> /dev/null; then
                                echo "Maven not found. Installing Maven..."
                                apt-get install -y maven
                            fi

                            # Run Selenium tests
                            mvn test
                        '''
                    }
                }
            }
        } 
    }
}
