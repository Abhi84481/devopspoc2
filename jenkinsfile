pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            inheritFrom 'base-pod-template' // Inherit from a base pod template
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    args: ['${computer.jnlpUrl}']
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }
    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository...'
                // Cloning the repository is not required if the pipeline is already running in the context of the repo.
                // If needed, use the git step here as follows:
                // git url: 'https://github.com/prabhatu012345/jenkins-maven-pipeline.git', branch: 'main'
            }
        }

        stage('JUnit Test') {
            agent {
                kubernetes {
                    label 'junit-agent'
                    inheritFrom 'base-pod-template' // Inherit from a base pod template
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: junit-agent
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    args: ['${computer.jnlpUrl}']
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: junit
    image: maven:3.8.5-jdk-11
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
                    '''
                }
            }
            steps {
                sh 'mvn test'
            }
        }

        stage('Build with Maven') {
            agent {
                kubernetes {
                    label 'maven-agent'
                    inheritFrom 'base-pod-template' // Inherit from a base pod template
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: maven-agent
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    args: ['${computer.jnlpUrl}']
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: maven
    image: maven:3.8.5-jdk-11
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
                    '''
                }
            }
            steps {
                sh 'mvn clean package'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
